name: building-images

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

env:
  DOCKER_SENDER_REPOSITORY: stepanlogvinov/sender
  DOCKER_RECEIVER_REPOSITORY: stepanlogvinov/receiver
  DEPLOYMENT_PATH: docker-compose-template.yaml
  DEPLOYMENT_FILE_NAME: docker-compose-prod.yaml
  REMOTE_SERVER_PATH_DIR: /opt/dockertest

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build, tag, and push image to Dockerhub
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd sender/
          docker build -t $DOCKER_SENDER_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_SENDER_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$DOCKER_SENDER_REPOSITORY:$IMAGE_TAG"
          cd ../receiver
          docker build -t $DOCKER_RECEIVER_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_RECEIVER_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$DOCKER_RECEIVER_REPOSITORY:$IMAGE_TAG"
          cd ../
          cat $DEPLOYMENT_PATH | sed "s/TAG/${IMAGE_TAG}/g" > $DEPLOYMENT_FILE_NAME

      - name: Copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DOCKERTEST_HOST }}
          username: ${{ secrets.DOCKERTEST_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}
          source: ${{ env.DEPLOYMENT_FILE_NAME }}
          target: ${{ env.REMOTE_SERVER_PATH_DIR }}

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOCKERTEST_HOST }}
          username: ${{ secrets.DOCKERTEST_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}
          script: docker compose -f ${{ env.REMOTE_SERVER_PATH_DIR }}/${{ env.DEPLOYMENT_FILE_NAME }} down && docker compose -f ${{ env.REMOTE_SERVER_PATH_DIR }}/${{ env.DEPLOYMENT_FILE_NAME }} up -d
